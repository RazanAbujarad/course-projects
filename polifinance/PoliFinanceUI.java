package polifinance;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
//import static DataGrapher.makeGraph;

/**
 *
 * @author RazanAbujarad
 */
public class PoliFinanceUI extends javax.swing.JDialog {

    /**
     * Creates new form PoliFinanceUI
     */
    public PoliFinanceUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        list1 = new java.awt.List();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Show results");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Sort based on:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recipient", "Political Party", "Electoral District", "Contributor type", "Contributor", "Monetary amount", "Non-monetary amount" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 2, 18)); // NOI18N
        jLabel2.setText("PoliFinance");

        list1.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        list1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recipient", "Contributor" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Search based on:");

        jButton2.setText("Show results");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Graph:");

        jButton3.setText("Show results");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton3))
                .addGap(8, 8, 8)
                .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        /*USE JOPTION PANE TO OUTPUT MESSAGES */
        //JOptionPane.showMessageDialog(this, "Amount was selected");
        
        //to display the list of objects, call a method which returns a list 
        //take the list and display it according to what the user wants.


        if(((String) jComboBox1.getSelectedItem()).equals("Recipient")){
              JOptionPane.showMessageDialog(this, "Recipient was selected"); 
//              try {
//               DataT[] recipient = PoliFinance.getSortedRecipient();
//               for (int i = 0; i < 1500; i ++ ){ list1.add(recipient[i].toString()); }
//               }
//              catch(InvalidCategoryException e){ e.printStackTrace(); }
               
               DataT[] recipient = PoliFinance.getSortedRecipient();
			for (int i = 0; i < 1500; i ++ ){ list1.add(recipient[i].getRecipient()); }
			//System.out.println(list1.getSelectedItem()); 
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Political Party")){
            JOptionPane.showMessageDialog(this, "Political Party was selected");
               DataT[] politicalParty = PoliFinance.getSortedParty();
			//changed to getparty instead of tostring
			for (int i = 0; i < 1500; i ++ ){ list1.add(politicalParty[i].getParty()); } 
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Electoral District")){
            JOptionPane.showMessageDialog(this, "Electoral District was selected");
               DataT[] district = PoliFinance.getSortedElectoralDistrict();
			for (int i = 0; i < 1500; i ++ ){ list1.add(district[i].getElectoralDistrict()); }
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Contributor type")){
            JOptionPane.showMessageDialog(this, "Contributor type was selected");
               DataT[] contributorType = PoliFinance.getSortedContributorType();
			for (int i = 0; i < 1500; i ++ ){ list1.add(contributorType[i].getContributorType()); }
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Contributor")){
            JOptionPane.showMessageDialog(this, "Contributor was selected");
               DataT[] contributor = PoliFinance.getSortedContributor();
			for (int i = 0; i < 1500; i ++ ){ list1.add(contributor[i].getContributor()); }
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Monetary amount")){
            JOptionPane.showMessageDialog(this, "Monetary amount was selected");
               DataT[] mAmount = PoliFinance.getSortedMAmount();
			for (int i = 0; i < 1500; i ++ ){ list1.add(mAmount[i].getAmount().toString()); } 
			//System.out.println(mAmount[i].getAmount());
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Non-monetary amount")){
            JOptionPane.showMessageDialog(this, "Non-monetary amount was selected");
               DataT[] NMAmount = PoliFinance.getSortedNMAmount();
			for (int i = 0; i < 1500; i ++ ){ list1.add(NMAmount[i].getNAmount().toString()); }
        }
        

 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String itemText = (String) jComboBox1.getSelectedItem();
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void list1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list1ActionPerformed
        // TODO add your handling code here:
        System.out.println(list1.getSelectedIndex());
        if (((String) jComboBox1.getSelectedItem()).equals("Recipient") ){
            DataT[] recipient;
            recipient = PoliFinance.getSortedRecipient();
			JOptionPane.showMessageDialog(this, recipient[list1.getSelectedIndex()].info());
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Political Party")){
            DataT[] politicalParty;
            politicalParty = PoliFinance.getSortedParty();
			JOptionPane.showMessageDialog(this, politicalParty[list1.getSelectedIndex()].info());
        }
        if (((String) jComboBox1.getSelectedItem()).equals("Electoral District")){
            DataT[] electoralDistrict;
            electoralDistrict = PoliFinance.getSortedElectoralDistrict();
			JOptionPane.showMessageDialog(this, electoralDistrict[list1.getSelectedIndex()].info()); 
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Contributor type")){
            DataT[] contributorType;
            contributorType = PoliFinance.getSortedContributorType();
			JOptionPane.showMessageDialog(this, contributorType[list1.getSelectedIndex()].info()); 
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Contributor")){
            DataT[] contributor;
            contributor = PoliFinance.getSortedContributor();
			JOptionPane.showMessageDialog(this, contributor[list1.getSelectedIndex()].info()); 
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Monetary amount")){
            DataT[] mAmount;
            mAmount = PoliFinance.getSortedMAmount();
			JOptionPane.showMessageDialog(this, mAmount[list1.getSelectedIndex()].info()); 
        }
        
        if (((String) jComboBox1.getSelectedItem()).equals("Non-monetary amount")){
            DataT[] nmAmount;
            nmAmount = PoliFinance.getSortedNMAmount();
			JOptionPane.showMessageDialog(this, nmAmount[list1.getSelectedIndex()].info()); 
        }
        
        
    }//GEN-LAST:event_list1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if(((String) jComboBox2.getSelectedItem()).equals("Recipient")){
            
            String rInput = JOptionPane.showInputDialog("Enter name of Recipient:");
            System.out.println(rInput);
            DataT[] recipientSearch = Search.byRecipients(rInput);
            
            if (recipientSearch.length != 0){
            	for (DataT i : recipientSearch){ list1.add(i.toString()); }
            }
            else {
            	JOptionPane.showMessageDialog(this, "Invalid Recipient Name");
            }
    		
        }   
        
        if(((String) jComboBox2.getSelectedItem()).equals("Contributor")){
            
            String cInput = JOptionPane.showInputDialog("Enter name of Contributor:");
            System.out.println(cInput);
            DataT[] contributorSearch = Search.byContributor(cInput);
            
            if (contributorSearch.length != 0){
            	for (DataT i : contributorSearch){ list1.add(i.toString()); }
            }
            else {
            	JOptionPane.showMessageDialog(this, "Invalid Contributor Name");
            }
    		
        } 
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        list1.add("Hello World");
        
//        long stime, etime;
//        
//        String[] input = {"getParty", "getContributor"};	
//	Digraph graph ; //= DataGrapher.makeGraph(input, 0, 30);
//	String[] input2 = {"Progressive Conservative", "KANESCO HOLDINGS"};
//		
//	DataT[] output = DataGrapher.crossReference(graph, input2);
//		
//	for(int i = 0; i < output.length; i ++){
//            System.out.println(output[i].toString());
//        
//        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PoliFinanceUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PoliFinanceUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PoliFinanceUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PoliFinanceUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PoliFinanceUI dialog = new PoliFinanceUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables
}
